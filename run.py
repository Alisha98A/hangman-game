import gspread
from google.oauth2.service_account import Credentials
import pyfiglet

# Define the scopes required for accessing Google Sheets
SCOPE = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]

# Load credentials from a service account file
CREDS = Credentials.from_service_account_file('creds.json')
SCOPED_CREDS = CREDS.with_scopes(SCOPE)

# Authorize the Google Sheets API with the credentials
GSPREAD_CLIENT = gspread.authorize(SCOPED_CREDS)

# Open the spreadsheet titled 'hangman_game'
SHEET = GSPREAD_CLIENT.open('hangman_game')

# Access the 'scoreboard' worksheet within the spreadsheet
scoreboard = SHEET.worksheet('scoreboard')
data = scoreboard.get_all_values()


# List of words for the hangman game
# The split method was taken from:
# https://www.w3schools.com/python/ref_string_split.asp
words = """
statement dough blackmail intermediate gallery well reputation resident
operational publisher characteristic bedroom salvation candidate conclusion
knife dash space achievement mastermind copyright dimension onion
possibility proposal guest outside skip crisis astonishing salesperson urgency
lamp replace impact arrogant aunt python proclaim multiply
shareholder mail personality polish cereal storm illusion
""".split()


# Function for welcome text using ASCII art generated by 'pyfiglet'
# Code adapted from: https://pypi.org/project/art/
def print_welcome_text():
    text = "Welcome to Hangman Game!"
    ascii_art = pyfiglet.figlet_format(text)
    print(ascii_art)


# Function to print hangman logo
# Code adapted from:
# https://realpython.com/python-main-function/
def print_hangman_logo():
    hangman_logo = """
     _______
    |/      |
    |      (_)
    |      \|/
    |       |
    |      / \\
    |
   _|___
  |     |______
  |____________|
    """
    print(hangman_logo)


# Function to print the rules of the game
def print_rules():
    rules = """
    Rules of Hangman:
    1. You need to guess the word letter by letter.
    2. You have a limited number of guesses (6 incorrect guesses).
    3. Each incorrect guess brings the man closer to hanging.
    4. If you guess the word before running out of attempts, you win!
    5. If the man gets hanged, you lose.
    """
    print(rules)


# List of hangman drawings for each stage
# Drawings inspired by:
# https://www.youtube.com/watch?v=WV2zPAVRekY
hangman_stages = [
    """
     _______
    |/      |
    |      
    |      
    |       
    |      
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |      
    |       
    |      
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |       |
    |       |
    |      
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |      \|
    |       |
    |      
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |      \|/
    |       |
    |      
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |      \|/
    |       |
    |      / 
    |
   _|___
  |     |______
  |____________|
    """,
    """
     _______
    |/      |
    |      (_)
    |      \|/
    |       |
    |      / \\
    |
   _|___
  |     |______
  |____________|
    """
]

# Function to print the hangman drawing based on remaining attempts
# Code adapted from https://www.youtube.com/watch?v=XwaEo4f17LU
def print_hangman(attempts):
    print(hangman_stages[6 - attempts])

# Main function to run the game
def main():
    print_welcome_text()
    print_hangman_logo()
    print_rules()

    # Test the print_hangman function with different attempts
    # Code from https://www.freecodecamp.org/news/python-for-loop-for-i-in-range-example/
    for i in range(7):
        print(f"Attempt {i}:")
        print_hangman(i)
        print("\n")

if __name__ == "__main__":
    main()
